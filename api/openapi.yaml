openapi: 3.0.3
info:
  title: Tree Tracker API
  description: 'Stock management for tree planting, and biodiversity improvement.'
  version: 2.0.0
  contact:
    name: Green Turtle Support
    url: 'https://greenturtle.io/'
    email: phil@greenturtle.io
  license:
    name: Creative Commons Attribution 4.0 International License
    url: https://creativecommons.org/licenses/by/4.0/
servers:
  - url: 'https://hostname/'
    description: Hostname

paths:

  '/things/{id}':
    get:
      operationId: get-things
      summary: Get things
      parameters:
        - in: path
          name: id
          description: The thing ID
          required: true
          schema:
            type: integer
            example: 123
      security:
        - "ApiKey": [ ]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties: 
                  data: 
                    type: array

  '/units':
    post:
      summary: Upload a Unit
      description: 'Internal endpoint for iOS app only, to upload a unit from the field.'
      operationId: post-upload
      x-internal: true
      security:
        - "ApiKey": [ ]
      parameters:
        - in: header
          name: X-Idempotency-Key
          description: An Idempotency Key.
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Upload'
      responses:
        '201':
          description: Created
        '401':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Generic_Problem'
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Generic_Problem'
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Generic_Problem'
        '409':
          description: Conflict
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Generic_Problem'
        '422':
          description: Validation Failed
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Generic_Problem'


  '/maps/site/{site}':
    parameters:
      - in: path
        name: site
        description: The site ID
        required: true
        schema:
          type: string
          format: uuid
          example: 61f423e5-3cac-4e82-a520-b233730637bb
    get:
      operationId: get-unit-pins
      summary: A list of units at a site in GeoJSON format
      description: 'As a potential donor I want to see that Protect Earth are doing real work, and seeing all the units that have been planted at a site makes the project seem transparent and real.'
      security: [ ]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Generic_GeoJSON'
        '404':
          description: Site not found.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Generic_Problem'
components:
  schemas:
    # Generic Shapes, please override with allOf to make more useful models
    Generic_GeoJSON:
      $ref: schemas/geojson.yaml
    Generic_Problem:
      $ref: schemas/problem.yaml

    Organization:
      $ref: schemas/organization.yaml
    Order:
      $ref: schemas/order.yaml
    Site:
      $ref: schemas/site.yaml
    Species:
      $ref: schemas/species.yaml
    Supervisor:
      $ref: schemas/supervisor.yaml
    Upload:
      $ref: schemas/upload.yaml


  securitySchemes:
    "ApiKey":
      type: http
      scheme: bearer
