openapi: 3.0.3
info:
  title: Tree Tracker API
  description: 'Stock management for tree planting, and biodiversity improvement.'
  version: 2.0.0
  contact:
    name: Green Turtle Support
    url: 'https://greenturtle.io/'
    email: phil@greenturtle.io
  license:
    name: Creative Commons Attribution 4.0 International License
    url: https://creativecommons.org/licenses/by/4.0/
servers:
  - url: 'https://hostname/'
    description: Hostname

tags:
  - name: Map
  - name: Order
  - name: Organization
  - name: Site
  - name: Species
  - name: Supervisor
  - name: Upload
paths:

  '/upload':
    post:
      summary: Upload a Unit
      description: 'Internal endpoint for iOS app only, to upload a unit from the field.'
      operationId: post-upload
      x-internal: true
      tags:
        - Upload
      security:
        - "ApiKey": [ ]
      parameters:
        - in: header
          name: Idempotency-Key
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Upload'
      responses:
        '201':
          description: Created
        '401':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Generic_Problem'
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Generic_Problem'
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Generic_Problem'
        '409':
          description: Conflict
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Generic_Problem'
        '422':
          description: Validation Failed
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Generic_Problem'

  '/shopify/webhook/orders/paid':
    post:
      operationId: post-orders
      summary: Save Shopify Order
      description: 'Orders made through Shopify using the 2023-07 API version'
      tags:
        - Webhooks
      requestBody:
        content:
          application/json:
            schema:
              properties:
                id:
                  type: string
      responses:
        '201':
          description: OK
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Generic_Problem'
        '401':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Generic_Problem'
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Generic_Problem'
        '422':
          description: Validation Failed
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Generic_Problem'

  '/orders/{order}':
    parameters:
      - in: path
        name: order
        required: true
        schema:
          type: string
          format: uuid
          example: 53f7bd7b-2ee2-4be4-a15b-e09c76a150f9
    get:
      operationId: get-orders-uuid
      summary: Get Order
      description: 'Orders are made by organizations to fund tree planting, and when trees are planted those orders will be marked as fullfilled. Orders may be partially fulfilled, and it is up to you if you wish to import those. Make sure to deduplicate the trees if you do.'
      tags:
        - Order
      security:
        - "ApiKey": [ ]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '401':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Generic_Problem'
        '404':
          description: Organization not found.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Generic_Problem'

  '/orgs/{organization}':
    parameters:
      - in: path
        name: organization
        description: Unique identifier given to an organization by Protect Earth support.
        required: true
        schema:
          type: string
          format: uuid
          example: 61f423e5-3cac-4e82-a520-b233730637bb
    get:
      operationId: get-orgs-uuid
      summary: Get Organization
      description: 'Each funding partner in the tree tracker is an Organization, and they have their own unique URL, with a UUID. Protect Earth will provide you your UUID and that will act as your entrypoint. You will be able to poll this URL every week, or manually when we let you know, in order to see the status of your orders.'
      tags:
        - Organization
      security:
        - "ApiKey": [ ]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
        '401':
          description: Unauthorized
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Generic_Problem'
        '404':
          description: Organization not found.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Generic_Problem'
  '/sites':
    get:
      operationId: get-sites
      summary: Get Sites
      description: 'Sites are locations where trees are planted'
      tags:
        - Site
      security: [ ]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Site'
  '/species':
    get:
      operationId: get-species
      summary: Get Species
      description: 'Species are the different types of trees'
      tags:
        - Species
      security: [ ]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Species'
  '/supervisors':
    get:
      operationId: get-supervisors
      summary: Get Supervisors
      description: 'Get a list of all the supervisors'
      tags:
        - Supervisor
      security: [ ]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Supervisor'
  '/maps/sites':
    get:
      operationId: get-project-pins
      summary: A list of sites in GeoJSON format
      description: 'As a potential donor I want to see that Protect Earth are doing real work, and seeing all the sites makes the project seem transparent and real.'
      tags:
        - Map
      security: [ ]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Generic_GeoJSON'
  '/maps/sites/{site}':
    parameters:
      - in: path
        name: site
        description: Unique identifier given to a site by Protect Earth support.
        required: true
        schema:
          type: string
          format: uuid
          example: 61f423e5-3cac-4e82-a520-b233730637bb
    get:
      operationId: get-unit-pins
      summary: A list of units at a site in GeoJSON format
      description: 'As a potential donor I want to see that Protect Earth are doing real work, and seeing all the units that have been planted at a site makes the project seem transparent and real.'
      tags:
        - Map
      security: [ ]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Generic_GeoJSON'
        '404':
          description: Site not found.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Generic_Problem'
components:
  schemas:
    # Generic Shapes, please override with allOf to make more useful models
    Generic_GeoJSON:
      $ref: schemas/geojson.yaml
    Generic_Problem:
      $ref: schemas/problem.yaml

    Organization:
      $ref: schemas/organization.yaml
    Order:
      $ref: schemas/order.yaml
    Site:
      $ref: schemas/site.yaml
    Species:
      $ref: schemas/species.yaml
    Supervisor:
      $ref: schemas/supervisor.yaml
    Upload:
      $ref: schemas/upload.yaml


  securitySchemes:
    "ApiKey":
      type: http
      scheme: bearer
